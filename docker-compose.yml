version: '3.5'

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo/data:/data/db
    networks:
      - webtv

  api:
    build: ./api/
    restart: always
    environment:
      WEBTV_API_PORT: ${WEBTV_API_PORT}
      TWITCH_CLIENT_ID: ${TWITCH_CLIENT_ID}
      TWITCH_CLIENT_ID_SECRET: ${TWITCH_CLIENT_ID_SECRET}
      CHANNEL_ID: ${CHANNEL_ID}
      REDIRECT_URI: ${REACT_APP_API_HOST}
      REDIRECT_URI_APP: ${APP_HOST}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      SECRET_TOKEN_JWT: ${SECRET_TOKEN_JWT}
    volumes:
      - ./api/:/usr/src/
      - ./api/package.json:/usr/src/package.json
      - /usr/src/node_modules
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_network"
      traefik.http.services.api-bapmarty-tv.loadbalancer.server.port: "3000"
      #HTTP
      traefik.http.routers.api-bapmarty-tv.entrypoints: "http"
      traefik.http.routers.api-bapmarty-tv.rule: "Host(`api.bapmarty.fr`) || Host(`bapmarty.fr`) && PathPrefix(`/api{regex:$$|/.*}`)"
      traefik.http.routers.api-bapmarty-tv.middlewares: redirect-https
      #HTTPS
      traefik.http.routers.api-bapmarty-tv-secure.entrypoints: "https"
      traefik.http.routers.api-bapmarty-tv-secure.rule: "Host(`api.bapmarty.fr`) || Host(`bapmarty.fr`) && PathPrefix(`/api{regex:$$|/.*}`)"
      #TLS
      traefik.http.routers.api-bapmarty-tv-secure.tls: "true"
      traefik.http.routers.api-bapmarty-tv-secure.tls.certresolver: "le-bapmarty"
      traefik.http.routers.api-bapmarty-tv-secure.tls.domains[0].main: "bapmarty.fr"
      traefik.http.routers.api-bapmarty-tv-secure.tls.domains[0].sans: "api.bapmarty.fr"
      #Redirect https
      traefik.http.middlewares.redirect-https.redirectscheme.scheme: "https"
      traefik.http.middlewares.redirect-https.redirectscheme.permanent: "true"
      #Strip prefix
      traefik.http.routers.api-bapmarty-tv-secure.middlewares: "api-stripprefix"
      traefik.http.middlewares.api-stripprefix.stripprefix.prefixes: '/api'
    networks:
      - traefik_network
      - webtv

  app:
    build: ./app/
    restart: always
    environment:
      REACT_APP_API_HOST: ${REACT_APP_API_HOST}
      REACT_APP_CLIENT_ID: ${TWITCH_CLIENT_ID}
    volumes:
      - ./app/package.json:/usr/src/package.json
      - ./app/:/usr/src/
      - /usr/src/node_modules
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_network"
      traefik.http.services.tvbaptistemrtfr.loadbalancer.server.port: "3000"
      #HTTP
      traefik.http.routers.front-tvbaptistemrtfr.entrypoints: "http"
      traefik.http.routers.front-tvbaptistemrtfr.rule: "Host(`bapmarty.fr`)"
      traefik.http.routers.front-tvbaptistemrtfr.middlewares: redirect-https
      #HTTPS
      traefik.http.routers.front-tvbaptistemrtfr-secure.entrypoints: "https"
      traefik.http.routers.front-tvbaptistemrtfr-secure.rule: "Host(`bapmarty.fr`)"
      #TLS
      traefik.http.routers.front-tvbaptistemrtfr-secure.tls: "true"
      traefik.http.routers.front-tvbaptistemrtfr-secure.tls.certresolver: "le-bapmarty"
      traefik.http.routers.front-tvbaptistemrtfr-secure.tls.domains[0].main: "bapmarty.fr"
      #Redirect https
      traefik.http.middlewares.redirect-https.redirectscheme.scheme: "https"
      traefik.http.middlewares.redirect-https.redirectscheme.permanent: "true"
    networks:
      - traefik_network
      - webtv

networks:
  traefik_network:
    external: true
  webtv:
    name: webtv
